{"version":3,"sources":["Component/Filter/Filter.module.css","redux/action.js","Component/ContactForm/ContactForm.js","Component/Filter/Filter.js","Component/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js","Component/ContactList/ContactList.module.css"],"names":["module","exports","phonebookActions","fetchContactsSuccess","createAction","fetchContactsRequest","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","connect","dispath","onSubmit","name","number","actions","addContact","useState","setName","setNumber","handleChange","e","currentTarget","value","nameInputId","shortid","generate","numberInputId","className","preventDefault","htmlFor","onChange","type","id","pattern","title","required","autoComplete","state","phonebook","filter","action","target","s","SearchContainer","ContName","placeholder","getFilterSearch","contacts","normalizedFilter","toLowerCase","contact","includes","dispatch","onDeleteContact","deleteContact","container","map","item","onClick","btn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","isLoading","error","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.ab078115.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchContainer\":\"Filter_SearchContainer__1sHGd\",\"SearchName\":\"Filter_SearchName__SFFAR\",\"ContName\":\"Filter_ContName__xjGTk\",\"InputSearch\":\"Filter_InputSearch__2Ul7_\"};","// import shortid from 'shortid';\r\n// import PropTypes from 'prop-types';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n// const addContact = createAction('ADD_CONTACT', ({ name, number }) => {\r\n//   return {\r\n//     payload: {\r\n//       id: shortid.generate(),\r\n//       name,\r\n//       number,\r\n//     },\r\n//   };\r\n// });\r\n\r\nconst fetchContactsSuccess = createAction('phonebook/fetchContactsSuccess');\r\nconst fetchContactsRequest = createAction('phonebook/fetchContactsRequest');\r\nconst fetchContactsError = createAction('phonebook/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('phoneBook/fetchContactRequest');\r\nconst addContactSuccess = createAction('phoneBook/fetchContactSucces');\r\nconst addContactError = createAction('phoneBook/fetchContactError');\r\n\r\nconst deleteContactRequest = createAction('phoneBook/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('phoneBook/deleteContactSuccess');\r\nconst deleteContactError = createAction('phoneBook/deleteContactError');\r\n\r\nconst changeFilter = createAction('phoneBook/changeFilter');\r\n\r\nconst phonebookActions = {\r\n  fetchContactsSuccess,\r\n  fetchContactsRequest,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n};\r\n\r\nexport default phonebookActions;\r\n","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport './ContactForm.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/action';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  // console.log(localStorage);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  return (\r\n    <form className=\"Input-container\" onSubmit={handleSubmit}>\r\n      <h3 className=\"Input-name\"> Name </h3>\r\n      <label htmlFor={nameInputId}>\r\n        <input\r\n          className=\"Input\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id={nameInputId}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          autoComplete=\"off\"\r\n        />\r\n      </label>\r\n      <label className=\"TelInputContainer\" htmlFor={numberInputId}>\r\n        <h3 className=\"Input-name\"> Number </h3>\r\n        <input\r\n          value={number}\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          id={numberInputId}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className=\"input-btn\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nconst mapDispatchToProps = dispath => ({\r\n  onSubmit: (name, number) => dispath(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport action from '../../redux/action';\r\nimport React from 'react';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.SearchContainer}>\r\n    <p className={s.ContName}>Find contacts by name:</p>\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      className=\"InputSearch\"\r\n      placeholder=\"Paul Richardson\"\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.phonebook.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispath => ({\r\n  onChange: e => dispath(action.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/action';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.container}>\r\n    {contacts.map(({ name, number, id }) => (\r\n      <li key={id} className={s.item}>\r\n        {name}: {number}\r\n        <button type=\"button\" onClick={() => onDeleteContact(id)} className={s.btn}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n};\r\n\r\nconst getFilterSearch = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n};\r\n\r\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\r\n  contacts: getFilterSearch(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import './App.css';\r\nimport ContactForm from './Component/ContactForm/ContactForm';\r\nimport Filter from './Component/Filter/Filter';\r\nimport ContactList from './Component/ContactList/ContactList';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <div className=\"Input-form\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2 className=\"SearchName\">Contact</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport phonebookActions from './action';\r\n// import { toast } from 'react-toastify';\r\n// import action from './action';\r\n\r\nconst contacts = createReducer([], {\r\n  [phonebookActions.fetchContactsSuccess]: (_, action) => action.payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [phonebookActions.fetchContactsRequest]: () => true,\r\n  [phonebookActions.fetchContactsSuccess]: () => false,\r\n  [phonebookActions.fetchContactsError]: () => false,\r\n});\r\n\r\n// const contacts = createReducer(\r\n//   [\r\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//   ],\r\n//   {\r\n//     [action.addContact]: (state, { payload }) =>\r\n//       state.find(contact => contact.name.includes(payload.name)) ? state : [...state, payload],\r\n//     [action.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n//   },\r\n// );\r\n\r\nconst filter = createReducer('', {\r\n  [phonebookActions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  isLoading,\r\n  error,\r\n});\r\n","// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\nimport reducer from './reducer';\r\n\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: reducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const middleware = [\r\n//   ...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     },\r\n//   }),\r\n//   logger,\r\n// ];\r\n// const bookPersistConfig = {\r\n//   key: 'phoneName',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     phonebook: persistReducer(bookPersistConfig, reducer),\r\n//   },\r\n\r\n//   middleware,\r\n\r\n//   devTools: process.env.NODE_ENV === 'development',\r\n// });\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__1sIKg\",\"item\":\"ContactList_item__3tKVb\",\"btn\":\"ContactList_btn__kDCBn\"};"],"sourceRoot":""}