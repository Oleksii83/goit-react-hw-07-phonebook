{"version":3,"sources":["Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","redux/action.js","Component/ContactForm/ContactForm.js","Component/Filter/Filter.js","Component/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","propTypes","PropTypes","string","isRequired","phonebookActions","deleteContact","changeFilter","connect","dispath","onSubmit","actions","useState","setName","setNumber","handleChange","e","currentTarget","value","nameInputId","numberInputId","className","preventDefault","htmlFor","onChange","type","pattern","title","required","autoComplete","state","phonebook","filter","action","target","s","SearchContainer","ContName","placeholder","getFilterSearch","contacts","normalizedFilter","toLowerCase","contact","includes","dispatch","onDeleteContact","container","map","item","onClick","btn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","find","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","bookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","allElementOfStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.de6f7c92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__1sIKg\",\"item\":\"ContactList_item__3tKVb\",\"btn\":\"ContactList_btn__kDCBn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchContainer\":\"Filter_SearchContainer__1sHGd\",\"SearchName\":\"Filter_SearchName__SFFAR\",\"ContName\":\"Filter_ContName__xjGTk\",\"InputSearch\":\"Filter_InputSearch__2Ul7_\"};","import shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('ADD_CONTACT', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\naddContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nconst deleteContact = createAction('DELETE');\r\n\r\nconst changeFilter = createAction('CHANGE_FILTER');\r\n\r\nconst phonebookActions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default phonebookActions;\r\n","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport './ContactForm.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/action';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  // console.log(localStorage);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  return (\r\n    <form className=\"Input-container\" onSubmit={handleSubmit}>\r\n      <h3 className=\"Input-name\"> Name </h3>\r\n      <label htmlFor={nameInputId}>\r\n        <input\r\n          className=\"Input\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id={nameInputId}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          autoComplete=\"off\"\r\n        />\r\n      </label>\r\n      <label className=\"TelInputContainer\" htmlFor={numberInputId}>\r\n        <h3 className=\"Input-name\"> Number </h3>\r\n        <input\r\n          value={number}\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          id={numberInputId}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className=\"input-btn\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nconst mapDispatchToProps = dispath => ({\r\n  onSubmit: (name, number) => dispath(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport action from '../../redux/action';\r\nimport React from 'react';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.SearchContainer}>\r\n    <p className={s.ContName}>Find contacts by name:</p>\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      className=\"InputSearch\"\r\n      placeholder=\"Paul Richardson\"\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.phonebook.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispath => ({\r\n  onChange: e => dispath(action.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/action';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.container}>\r\n    {contacts.map(({ name, number, id }) => (\r\n      <li key={id} className={s.item}>\r\n        {name}: {number}\r\n        <button type=\"button\" onClick={() => onDeleteContact(id)} className={s.btn}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n};\r\n\r\nconst getFilterSearch = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n};\r\n\r\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\r\n  contacts: getFilterSearch(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import './App.css';\r\nimport ContactForm from './Component/ContactForm/ContactForm';\r\nimport Filter from './Component/Filter/Filter';\r\nimport ContactList from './Component/ContactList/ContactList';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <div className=\"Input-form\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2 className=\"SearchName\">Contact</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport action from './action';\r\n\r\nconst contacts = createReducer(\r\n  [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  {\r\n    [action.addContact]: (state, { payload }) =>\r\n      state.find(contact => contact.name.includes(payload.name)) ? state : [...state, payload],\r\n    [action.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n  },\r\n);\r\n\r\nconst filter = createReducer('', {\r\n  [action.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport reducer from './reducer';\r\n\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst bookPersistConfig = {\r\n  key: 'phoneName',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(bookPersistConfig, reducer),\r\n  },\r\n\r\n  middleware,\r\n\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst allElementOfStore = { store, persistor };\r\n\r\nexport default allElementOfStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}